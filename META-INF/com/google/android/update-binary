#!/sbin/sh
# LazyFlasher installer backend

tmp=/tmp/system-supersu

[ "$3" ] && {
	zip=$3
	console=/proc/$$/fd/$2
	# write the location of the console buffer to /tmp/console for other scripts to use
	echo "$console" > /tmp/console
} || {
	console=$(cat /tmp/console)
	[ "$console" ] || console=/proc/$$/fd/1
}

print() {
	echo "ui_print $1" > $console
	echo
}

abort() {
	[ "$1" ] && {
		print "Error: $1"
		print "Aborting..."
	}
	cleanup
	print "Failed to patch boot image!"
	exit 1
}

cleanup() {
	rm /system/.rw
	umount /system
	[ "$zip" ] && rm /tmp/console
}

extract() {
	rm -rf "$2"
	mkdir -p "$2"
	unzip -o "$1" -d "$2"
}

setperm() {
	find "$3" -type d -exec chmod "$1" {} \;
	find "$3" -type f -exec chmod "$2" {} \;
}

mount() {
	mountpoint -q "$1" || /sbin/busybox mount -o rw "$1" || abort "Unable to mount $1 as rw!"
	>> "$1/.rw" && return || /sbin/busybox mount -o remount,rw "$1"
	>> "$1/.rw" && return || abort "Unable to write to $1!"
}

print "#######################################"
print "#     system mode SuperSU patcher     #"
print "#      by jcadduono, version 1.3      #"
print "#         using SuperSU 2.70          #"
print "#######################################"

command -v getprop || {
	print "Warning: getprop not found! Skipping device check!"
	unset device_names
}

[ "$device_names" ] && {
	print "Checking device compatibility..."
	match=0
	ro_product_device="$(getprop ro.product.device)"
	ro_product_model="$(getprop ro.product.model)"
	ro_build_product="$(getprop ro.build.product)"
	for i in $device_names; do
		[ "$ro_product_device" = "$i" -o "$ro_product_model" = "$i" -o "$ro_build_product" = "$i" ] && match=1
	done
	[ $match != 1 ] && abort "Unsupported device"
}

# Unpack the installer
[ "$zip" ] && {
	print "Unpacking the installer..."
	extract "$zip" "$tmp"
}
cd "$tmp"

. config.sh

mount /system

print "Detected architecture: $arch"

setperm 0755 0755 "$bin"

print "Installing SuperSU policy binaries..."
setperm 0755 0755 arch
rm -f "/system/xbin/supolicy" "$libdir/libsupol.so"
cp "arch/$arch/supolicy" "/system/xbin/"
cp "arch/$arch/libsupol.so" "$libdir/"

print "Setting SuperSU install mode to system..."
cat > "/system/.supersu" << EOF
SYSTEMLESS=false
PATCHBOOTIMAGE=false
EOF

print "Running boot image patcher..."
sh boot-patcher.sh || abort

print "Boot image patching complete"

cleanup
print "Done installing!"
